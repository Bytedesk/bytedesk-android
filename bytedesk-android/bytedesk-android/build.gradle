apply plugin: 'com.android.library'
// 步骤3：添加下面这一行
apply plugin: 'com.google.protobuf'

android {

    defaultConfig {
        compileSdk 34
        minSdkVersion 21
//        compileSdk rootProject.ext.compileSdkVersion
//        minSdkVersion rootProject.ext.minSdkVersion
//        targetSdkVersion rootProject.ext.targetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

//        externalNativeBuild {
//            cmake {
//                cppFlags ""
//            }
//        }

//        ndk {
//            // TODO: 根据平台需要注释掉无关.so以减小apk体积
//            moduleName = "mmnet"
//            abiFilter "arm64-v8a"
////            abiFilter "armeabi"
//            abiFilter "armeabi-v7a"
//            abiFilter "x86"
//            abiFilter "x86_64"
//        }

    }

    // 步骤4：添加sourceSets
//    sourceSets {
//        main {
//            proto {
//                srcDir "src/main/proto"
//            }
//            java {
//                srcDir "src/main/java"
//            }
//            jni {
//                srcDir "src/main/jni"
//            }
//            jniLibs {
//                srcDir "libs"
//            }
//        }
//    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    lint {
        abortOnError false
    }
    namespace 'com.bytedesk.im'

//    externalNativeBuild {
//        cmake {
//            path "src/main/cpp/CMakeLists.txt"
//            version "3.10.2"
//        }
//    }

}

// 步骤5：添加如下protobuf{...}
protobuf {
    protoc {
        // 建议修改为最新版本
//        https://mvnrepository.com/artifact/com.google.protobuf/protoc
        artifact = 'com.google.protobuf:protoc:3.18.1'
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
            }
            task.builtins {
                java {
                    option "lite"
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // MQTT
//    https://www.eclipse.org/paho/clients/java/
//    https://github.com/eclipse/paho.mqtt.java
//    https://mvnrepository.com/artifact/org.eclipse.paho/org.eclipse.paho.client.mqttv3
    implementation "org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.5"
//    stomp
//    https://github.com/NaikSoftware/StompProtocolAndroid
    api 'org.java-websocket:Java-WebSocket:1.3.6'

    // 步骤6：添加下面一行，建议修改为最新版本
//    implementation 'com.google.protobuf:protobuf-java:3.9.1'
    // 步骤6：添加下面一行，建议修改为最新版本
//    implementation 'com.google.protobuf:protobuf-java:' + rootProject.protobufJavaVersion

//    https://mvnrepository.com/artifact/com.google.protobuf/protobuf-javalite
    implementation 'com.google.protobuf:protobuf-javalite:3.21.10'
//    https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation 'com.google.code.gson:gson:2.10.1'

    // RxJava + Retrofit2 + OkHttp3
//    https://mvnrepository.com/artifact/com.squareup.retrofit2/retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation "com.squareup.retrofit2:converter-scalars:2.9.0"
    implementation "com.squareup.retrofit2:adapter-rxjava3:2.9.0"
    // https://mvnrepository.com/artifact/com.squareup.okhttp3/logging-interceptor
    implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'
    //    含有protobuf-java与libmars中的protobuf-javalite冲突，应该exclude
//    implementation 'com.squareup.retrofit2:converter-protobuf:' + rootProject.retrofit2Version

    // RxAndroid: Reactive Extensions for Android
    // https://github.com/ReactiveX/RxAndroid
//    https://mvnrepository.com/artifact/io.reactivex.rxjava2/rxandroid
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    // 事件总线
//    https://mvnrepository.com/artifact/org.greenrobot/eventbus
    implementation 'org.greenrobot:eventbus:3.3.1'

    // https://github.com/orhanobut/logger
    implementation 'com.orhanobut:logger:2.2.0'

    // https://github.com/promeG/TinyPinyin
//    https://mvnrepository.com/artifact/com.github.promeg/tinypinyin
    // 汉字转拼音
    implementation 'com.github.promeg:tinypinyin:2.0.3' // TinyPinyin核心包，约80KB
//    implementation 'com.github.promeg:tinypinyin-lexicons-android-cncity:2.0.3' // 可选，适用于Android的中国地区词典

//    https://developer.android.com/topic/libraries/architecture/adding-components.html
//    https://mvnrepository.com/artifact/androidx.lifecycle/lifecycle-extensions
    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:2.6.1"

//    https://mvnrepository.com/artifact/androidx.room/room-runtime
    implementation "androidx.room:room-runtime:2.5.1"
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
//    https://mvnrepository.com/artifact/androidx.room/room-compiler
    annotationProcessor "androidx.room:room-compiler:2.5.1"
    // https://mvnrepository.com/artifact/androidx.room/room-common
    implementation "androidx.room:room-common:2.5.1"

    // 腾讯QMUI界面库
    // http://qmuiteam.com/android/page/start.html
    // https://mvnrepository.com/artifact/com.qmuiteam
    // https://mvnrepository.com/artifact/com.qmuiteam/qmui
    // https://mvnrepository.com/artifact/com.qmuiteam/arch
//    implementation 'com.qmuiteam:qmui:2.1.0'
//    implementation "com.qmuiteam:arch:2.1.0"

    // 自定义相册样式
    // https://github.com/yanzhenjie/Album
    implementation 'com.yanzhenjie:album:2.1.3'

    // 会话列表左滑按钮
//    https://mvnrepository.com/artifact/com.yanzhenjie/recyclerview-swipe
    implementation 'com.yanzhenjie:recyclerview-swipe:1.2.3'

    // 打印日志
    // https://github.com/orhanobut/logger
    // https://mvnrepository.com/artifact/com.orhanobut/logger
    implementation 'com.orhanobut:logger:2.2.0'

    // 图片加载：https://github.com/bumptech/glide
//    https://mvnrepository.com/artifact/com.github.bumptech.glide/glide
    implementation 'com.github.bumptech.glide:glide:4.16.0'
//    https://mvnrepository.com/artifact/com.github.bumptech.glide/compiler
    annotationProcessor 'com.github.bumptech.glide:compiler:4.16.0'
    //
//    https://mvnrepository.com/artifact/androidx.constraintlayout/constraintlayout
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
//    https://mvnrepository.com/artifact/com.google.android.material/material?repo=google
    implementation 'com.google.android.material:material:1.10.0'

    // 扫描+生成二维码
    // https://mvnrepository.com/artifact/cn.bingoogolapple/bga-qrcode-zxing?repo=jcenter
//    implementation 'cn.bingoogolapple:bga-qrcode-zxing:1.3.7'

    //
//    https://mvnrepository.com/artifact/androidx.appcompat/appcompat?repo=google
    implementation 'androidx.appcompat:appcompat:1.6.1'
    // https://mvnrepository.com/artifact/androidx.recyclerview/recyclerview
    implementation 'androidx.recyclerview:recyclerview:1.3.2'

    // https://github.com/googlesamples/easypermissions
    // For developers using AndroidX in their applications
//    https://mvnrepository.com/artifact/pub.devrel/easypermissions
    implementation 'pub.devrel:easypermissions:3.0.0'

    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.1.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}
// aar 文件直接到 build/outputs/aar 文件夹中拷贝

version = rootProject.ext.bytedeskCoreVersion
//group = "com.bytedesk"
// apply from: "bintray.gradle"

ext {
    PUBLISH_ARTIFACT_ID = 'libcore'
}
apply from: '../publish.gradle'
